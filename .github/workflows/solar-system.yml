name: Solar-System

on: push
   

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}    
    
jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
           MONGO_URI: 'mongodb://localhost:27017/superData'
           MONGO_USERNAME: non-prod-user
           MONGO_PASSWORD: non-prod-password       
        strategy:
          matrix:
            os: [ubuntu-latest, macos-latest]
            version: [18 ,19, 20]
            exclude:
              - version: 18
              - os: macos-latest 
        runs-on: ${{matrix.os}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{matrix.version}}
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.version}}

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: node_modules 
            key: ${{runner.os}}-node-modules-${{hashfiles('package-lock.json')}}   
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: test-report-${{ github.run_id }}-${{ github.job }}
            path: test-result.xml



    code-coverage:
         name: Code coverage
         services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            options: 
              --name mongo 
         env:
           MONGO_URI: 'mongodb://mongo:27017/superData'
           MONGO_USERNAME: non-prod-user
           MONGO_PASSWORD: non-prod-password 
         runs-on: ubuntu-latest
         container: 
          image: node:18
         steps:
         - name: Checkout Repository
           uses: actions/checkout@v4

        #  - name: Setup NodeJS Version 20
        #    uses: actions/setup-node@v3
        #    with:
        #       node-version: 20


         - name: Cache NPM dependencies
           uses: actions/cache@v4
           with:
            path: node_modules 
            key: ${{runner.os}}-node-modules-${{hashfiles('package-lock.json')}}
    
         - name: Install Dependencies
           run: npm install
    
         - name: check code coverage
           continue-on-error: true
           run: npm run coverage
          
         - name: Archive Test Result
           uses: actions/upload-artifact@v4
           with:
            name: code-coverage-Result
            path: coverage
            retention-days: 5


    docker:
        name: Containerization 
        needs: [unit-testing,code-coverage]
        permissions:
           packages: write

        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
            
          - name: Dockerhub login
            uses: docker/login-action@v3
            with:
              username: ${{vars.DOCKER_USERNAME}}
              password: ${{secrets.DOCKER_PASSWORD}}


          - name: GHCR login
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{github.repository_owner}}
              password: ${{secrets.GITHUB_TOKEN}}    

        
          - name: Docker Build for testing
            uses: docker/build-push-action@v6
            with:
              context: .     #path of dockerfile
              push: false
              tags: ${{ vars.DOCKER_USERNAME}}/solar-system:${{github.sha}}   
              
              

          - name: Docker Image Test
            run: |
               docker images
               docker run --name solar-system-app -d \
                  -p 3000:3000 \
                  -e MONGO_URI=${{ env.MONGO_URI }} \
                  -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
                  -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
                  ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo $IP

                echo Testing Image URL using wget
                wget -q -O - 127.0.0.1:3000/live | grep live


         
          - name: Container registry Push(docker and GHCR)
            uses: docker/build-push-action@v6
            with:
              context: .     #path of dockerfile
              push: True
              tags: |
                    ${{ vars.DOCKER_USERNAME}}/solar-system:${{github.sha}}  
                    ghcr.io/${{github.repository_owner}}/solar-system:${{ github.sha }}

    DEPLOY:
        name: Deployment 
        needs: [unit-testing,code-coverage,docker]
       

        runs-on: ubuntu-latest
        steps:
          - name: Deployment
            run: echo " Succefully Deployed"
